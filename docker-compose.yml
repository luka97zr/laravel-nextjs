version: "3.8"

services:

  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: cloudsigma.com/php
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    # ports:
    #   - "9000:9000"
    working_dir: /var/www/html/
    volumes:
      - ./:/var/www/html/
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - ./backend/php/laravel.ini:/usr/local/etc/php/conf.d/laravel.ini
    # depends_on:
    #   - db
    networks:
      - app-network

  nextjs:
    build:
      context: ./frontend
      # dockerfile: Dockerfile
    image: cloudsigma.com/nextjs
    container_name: nextjs
    restart: unless-stopped
    tty: true
    command: npm run dev
    ports:
      - "3000:3000"
    environment:
      SERVICE_NAME: nextjs
      SERVICE_TAGS: dev
    working_dir: /var/www/html/
    volumes:
      - ./frontend/:/var/www/html/
    depends_on:
      - app
    networks:
      - app-network

  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    volumes:
      - ./:/var/www/html/
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - ./backend/php/laravel.ini:/usr/local/etc/php/conf.d/laravel.ini
    depends_on:
      - app
      - nextjs
    networks:
      - app-network

  db:
    image: mariadb
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    env_file:
      - backend/.env
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - SERVICE_TAGS=dev
      - SERVICE_NAME=mysql
    volumes:
      - dbdata:/var/lib/mysql/
      - ./backend/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network
    
  adminer:
    image: adminer:latest
    container_name: adminer
    environment:
      ADMINER_DEFAULT_SERVER: db
    restart: always
    ports:
      - 7777:8080
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
    driver: local